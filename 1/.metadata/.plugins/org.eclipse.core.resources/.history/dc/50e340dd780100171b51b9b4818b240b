<?php

abstract class Animal {
	
	private $name;
	private $age;
	private $id;
	private $food;
	public static $nextID = 1;
	
	public function __construct($name,$age,$food){
		$this->name=$name;
		$this->age = $age;
		$this->food = $food;
		
		$this->id = self::$nextID;
		self::$nextID++;
	}
	
	public function getName(){
		return $this->name;
	}
	
	public function getAge(){
		return $this->age;
	}
	
	public function getID(){
		return $this->id;
	}
	
	public function eat(){
		print $this->name." eats ".$this->food;
	}
	
	public function __toString(){
		return "ID: ".$this->getID()."<br>Name: ".$this->getName()."<br>Age: ".$this->getAge();
	}
	abstract function move();
	
}

class Bird extends Animal {
	
	private $flyable;
	
	public function __construct($name,$age,$food,$flyable){
		parent::__construct($name,$age,$food);
		$this->flyable = $flyable;
	}
	
	public function getFlyable(){
		return $this->flyable;
	}
	
	public function move(){
		print "is flying";
	}
	
	public function eat(){
		print parent::eat()." like a crazy bird";
	}
	
	public function __toString(){
		return parent::__toString()."<br>Flyable: ".$this->getFlyable();
	}
}

//**********Testing area******************************************************************************************//

$b = new Bird("Birdy", 1,"broccoli", true);
print $b;


?>



























